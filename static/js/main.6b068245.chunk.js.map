{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","Main","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","dummy","useRef","useEffect","current","scrollIntoView","behavior","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","displayName","add","text","photoUrl","createdAt","FieldValue","serverTimestamp","name","SignOut","map","msg","ChatMessage","message","id","ref","onSubmit","type","value","onChange","target","required","props","messageClass","className","alt","src","width","height","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","signOut","App","useAuthState","user","el","ReactDOM","render","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4CCKdQ,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAE3B,SAASC,IAEP,IAAMC,EAAcF,EAAUG,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAACI,QAAQ,OAA9CC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAQC,mBAEdC,qBAAU,WACRF,EAAMG,QAAQC,eAAe,CAACC,SAAS,cAGzC,IAAMC,EAAW,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DAElBD,EAAEE,iBAFgB,EAIqBvB,EAAKwB,YAApCC,EAJU,EAIVA,IAAKC,EAJK,EAILA,SAAUC,EAJL,EAIKA,YAJL,SAMZxB,EAAYyB,IAAI,CACpBC,KAAKjB,EACLkB,SAASJ,EACTD,IAAIA,EACJM,UAAUxC,IAASU,UAAU+B,WAAWC,kBACxCC,KAAKP,IAXW,OAclBd,EAAa,IAEbC,EAAMG,QAAQC,eAAe,CAACC,SAAS,WAhBrB,2CAAH,sDAoBjB,OAAQ,gCACN,mCACE,6CACA,cAACgB,EAAD,OAEF,iCACGzB,GAAYA,EAAS0B,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACvD,qBAAKC,IAAK3B,OAGZ,uBAAM4B,SAAUtB,EAAhB,UACE,uBAAOuB,KAAK,OAAOC,MAAOhC,EAAWiC,SAAU,SAAAxB,GAAC,OAAIR,EAAaQ,EAAEyB,OAAOF,QAAQG,UAAQ,IAC1F,uBAAOJ,KAAK,SAASC,MAAM,eAKjC,SAASN,EAAYU,GAEnB,MAAsCA,EAAMT,QAApCV,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,IAAKK,EAAnB,EAAmBA,SAAUI,EAA7B,EAA6BA,KAEvBe,EAAexB,IAAQzB,EAAKwB,YAAYC,IAAM,OAAS,WAE7D,OAAO,sBAAKyB,UAAWD,EAAhB,UACL,qBAAKE,IAAI,KAAKC,IAAKtB,EAAUuB,MAAM,KAAKC,OAAO,OAC/C,8BAAG,+BAAO7B,IAAQzB,EAAKwB,YAAYC,IAAM,MAAQS,IAAY,uBAAML,QAIvE,SAAS0B,IAOP,OAAQ,sBAAKf,GAAG,SAAR,UACN,mBAAGA,GAAG,WAAN,0BACA,8EACA,uBACA,wBAAQgB,QATe,WACvB,IAAMC,EAAW,IAAIlE,IAASS,KAAK0D,mBACnC1D,EAAK2D,gBAAgBF,IAOrB,iCACA,uBACA,mBAAGjB,GAAG,SAAN,wCAIJ,SAASL,IACP,OAAOnC,EAAKwB,aACZ,wBAAQgC,QAAS,kBAAMxD,EAAK4D,WAA5B,sBAIF,SAASC,IAEP,MAAeC,YAAa9D,GAArB+D,EAAP,oBAEA,OAAQ,qBAAKvB,GAAG,MAAR,SACLuB,EAAM,cAAC7D,EAAD,IAAU,cAACqD,EAAD,MAKrB,IAAMS,EAAK,cAACH,EAAD,IAEXI,IAASC,OAAOF,EAAIG,SAASC,eAAe,SAK5CtF,M","file":"static/js/main.6b068245.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState,useRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDO3KAr7Vw-EyZhlpv2nCpliv2cpotDdkY\",\n  authDomain: \"superchat-6b42a.firebaseapp.com\",\n  projectId: \"superchat-6b42a\",\n  storageBucket: \"superchat-6b42a.appspot.com\",\n  messagingSenderId: \"586901058821\",\n  appId: \"1:586901058821:web:0b122313087c36888ef36c\",\n  measurementId: \"G-C5BEXQYX3F\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction Main(){\n\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(35);\n\n  const [messages] = useCollectionData(query, {idField:'id'})\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const dummy = useRef();\n\n  useEffect(() => {\n    dummy.current.scrollIntoView({behavior:'smooth'});\n  })\n\n  const sendMessage = async(e) => {\n\n    e.preventDefault();\n\n    const { uid, photoURL, displayName } = auth.currentUser;\n\n    await messagesRef.add({\n      text:formValue,\n      photoUrl:photoURL,\n      uid:uid,\n      createdAt:firebase.firestore.FieldValue.serverTimestamp(),\n      name:displayName\n    })\n\n    setFormValue(\"\");\n\n    dummy.current.scrollIntoView({behavior:'smooth'});\n\n  }\n\n  return (<div>\n    <header>\n      <p>ZumSuperChat</p>\n      <SignOut/>\n    </header>\n    <main>\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n      <div ref={dummy}></div>\n    </main>\n\n    <form onSubmit={sendMessage}>\n      <input type=\"text\" value={formValue} onChange={e => setFormValue(e.target.value)} required/>\n      <input type=\"submit\" value=\"Send\"/>\n    </form>\n  </div>)\n}\n\nfunction ChatMessage(props){\n\n  const { text, uid, photoUrl, name } = props.message; \n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return <div className={messageClass}>\n    <img alt=\"pp\" src={photoUrl} width=\"40\" height=\"40\"/>\n    <p><span>{uid === auth.currentUser.uid ? \"You\" : name}</span><br/>{text}</p>\n  </div>\n}\n\nfunction SignIn(){\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (<div id=\"SignIn\">\n    <p id=\"appTitle\">ZumSuperChat</p>\n    <p>Sign in to talk with people across the world!</p>\n    <br/>\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n    <br/>\n    <p id=\"footer\">ZUMTHEZAZAKING &copy;2021</p>\n  </div>)\n}\n\nfunction SignOut(){\n  return auth.currentUser && (\n  <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction App(){\n\n  const [user] = useAuthState(auth);\n\n  return (<div id=\"App\">\n    {user? <Main/> : <SignIn/>}\n  </div>)\n}\n\n\nconst el = <App/>\n\nReactDOM.render(el, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}